{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EAEPC,mBAAU,IAFH,mBAEpCC,EAFoC,KAExBC,EAFwB,KAmB3C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACrCN,EAAc,MAOlB,SACI,uBACIO,KAAM,OACNC,MAAST,EACTU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCDPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,sBAAKc,UAAY,yCAAjB,UACI,qBAAKC,IAAOf,EAAKgB,IAAON,IACxB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZd,mBAAU,CAEhCqB,KAAM,GACNa,SAAS,IALyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA0BtC,OAlBAC,qBAAY,WAERxB,EAASC,GACJwB,MAAK,SAAAC,GAIEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAK1B,CAACpB,IAIGqB,EDrB0BK,CAAc1B,GAAlCa,EAJsB,EAI3BN,KAAaa,EAJc,EAIdA,QAGrB,OACI,qCACI,oBAAIJ,UAAY,qBAAhB,SAAsChB,IAErCoB,GAAW,mBAAGJ,UAAU,4BAAb,wBAEZ,qBAAKA,UAAY,YAAjB,SAGOH,EAAOJ,KAAK,SAAAC,GAAG,OACV,cAAC,EAAD,eAESA,GADCA,EAAIC,aEgBvBgB,EAhCM,WAAO,IAAD,EAEazC,mBAAS,CAAC,cAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAQvB,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAECA,SAAWA,GADLA,YCpB3B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9a915b74.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) =>{\r\n\r\n    const [inputValue, setInputValue] = useState ('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats =>[inputValue, ...cats]); //Operador Spray ... inserta de primero la ultima categoria\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n                type= \"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs = async(category)=>{\r\n       \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=cfDjVBdiR2NFt4o7c6N7S6ZbGokAqz0P`;\r\n    const resp= await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n    \r\n    return(\r\n        <div className = \"card animate__animated animate__bounce\">\r\n            <img src = {url} alt = {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   \r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n   \r\n\r\n    return(\r\n        <>\r\n            <h3 className = \"animate__heartBeat\">{category}</h3>\r\n           \r\n            {loading && <p className=\"animate__lightSpeedInLeft\">Cargando..</p>}\r\n           \r\n            <div className = \"card-grid\">\r\n                { \r\n           \r\n                   images.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                   ))\r\n            \r\n                }\r\n            </div>\r\n             \r\n            \r\n        </>\r\n    )\r\n}","import {useEffect, useState} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState ({\r\n        \r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect ( () => {\r\n\r\n        getGifs (category)\r\n            .then(imgs => {\r\n\r\n                \r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n               \r\n            })\r\n\r\n    }, [category]);\r\n\r\n\r\n\r\n    return state; \r\n}","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    //Agregar un nuevo elemento al arreglo al presionar el boton agregar.\r\n    /*const handleAdd = () =>{\r\n        setCategories([...categories,'Pokemon']);\r\n    } */\r\n\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories= {setCategories} />\r\n        <hr />\r\n\r\n        \r\n\r\n        <ol>\r\n            {\r\n                categories.map(category => (\r\n                    <GifGrid\r\n                     key= {category}\r\n                     category= {category}\r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}